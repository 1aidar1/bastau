// Code generated by sqlc. DO NOT EDIT.

package postgres

import (
	"fmt"
	"time"
)

type Role string

const (
	RoleWorker Role = "worker"
	RoleClient Role = "client"
	RoleAll    Role = "all"
)

func (e *Role) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Role(s)
	case string:
		*e = Role(s)
	default:
		return fmt.Errorf("unsupported scan type for Role: %T", src)
	}
	return nil
}

type TokensScope string

const (
	TokensScopeAuth       TokensScope = "auth"
	TokensScopeActivation TokensScope = "activation"
)

func (e *TokensScope) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = TokensScope(s)
	case string:
		*e = TokensScope(s)
	default:
		return fmt.Errorf("unsupported scan type for TokensScope: %T", src)
	}
	return nil
}

type Token struct {
	Hash   []byte      `json:"hash"`
	UserID int64       `json:"user_id"`
	Expiry time.Time   `json:"expiry"`
	Scope  TokensScope `json:"scope"`
}

type User struct {
	ID       int64  `json:"id"`
	Name     string `json:"name"`
	Email    string `json:"email"`
	Role     Role   `json:"role"`
	Phone    string `json:"phone"`
	Password []byte `json:"password"`
}
